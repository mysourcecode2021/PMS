
@{
    ViewData["Title"] = "Overtime";
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Overtime</h3>
        <div class="card-tools col-md-10">
            <div class="input-group">
                <input type="text" class="form-control dpMonth" id="Periode" />
                @*<select class="custom-select" id="PeriodeYear">
                    <option value="">--Year--</option>
                    @foreach(var r in (List<dynamic>)ViewData["YEAR"]!)
                    {
                        <option value="@r.SystemCode">@r.SystemValue</option>
                    }
                </select>
                <select class="custom-select" id="PeriodeMonth">
                    <option value="">--Month--</option>
                    <option value="01">January</option>
                    <option value="02">February</option>
                    <option value="03">March</option>
                    <option value="04">April</option>
                    <option value="05">May</option>
                    <option value="06">June</option>
                    <option value="07">July</option>
                    <option value="08">August</option>
                    <option value="08">September</option>
                    <option value="10">October</option>
                    <option value="11">November</option>
                    <option value="12">December</option>
                </select>*@
                <div class="input-group-append">
                    &nbsp;
                    <button class="btn btn-outline-primary" type="button" id="btnGenerate">Generate Overtime</button>
                    &nbsp;
                    <button class="btn btn-primary btn-sm" type="button" id="btnSearch">
                        <i class="fas fa-search">
                        </i>
                        Search
                    </button>
                    &nbsp;
                    <button class="btn btn-danger btn-sm" type="button" id="btnClear">
                        <i class="fas fa-eraser">
                        </i>
                        Clear
                    </button>
                    &nbsp;
                    <a class="btn btn-warning btn-sm" id="btnEdit" href="javascript:void(0)">
                        <i class="fas fa-pencil-alt">
                        </i>
                        Edit
                    </a>
                    &nbsp;
                    <button class="btn btn-secondary btn-sm" type="button" id="btnExport" disabled>
                        <i class="fas fa-file-export">
                        </i>
                        Export Data
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row table-responsive" id="_content">

        </div>
    </div>
</div>

<div class="modal fade" id="_modal-form" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Form Additional / Adjustment</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="_formId">
                    <div class="card-body">
                        <div class="form-group">
                            <label>NIK</label>
                            <input type="text" name="NIK" data-name="NIK" class="form-control _formInput isKey" placeholder="NIK" />
                        </div>
                        <div class="form-group">
                            <label>Periode</label>
                            <input type="text" name="Periode" data-name="Periode" class="form-control _formInput isKey" placeholder="Periode" />
                        </div>
                        <div class="form-group">
                            <label>Base Day</label>
                            <input type="text" name="BaseDay" data-name="BaseDay" class="form-control _formInput mandatory" placeholder="Base Day" />
                        </div>
                        <div class="form-group">
                            <label>Additional Meal</label>
                            <input type="text" name="AdditionalMeal" data-name="AdditionalMeal" class="form-control _formInput mandatory" placeholder="Additional Meal" />
                        </div>
                        <div class="form-group">
                            <label>Adjustment Meal</label>
                            <input type="text" name="AdjustmentMeal" data-name="AdjustmentMeal" class="form-control _formInput mandatory" placeholder="Adjustment Meal" />
                        </div>
                        <div class="form-group">
                            <label>Additional Transport</label>
                            <input type="text" name="AdditionalTransport" data-name="AdditionalTransport" class="form-control _formInput mandatory" placeholder="Additional Transport" />
                        </div>
                        <div class="form-group">
                            <label>Adjustment Transport</label>
                            <input type="text" name="AdjustmentTransport" data-name="AdjustmentTransport" class="form-control _formInput mandatory" placeholder="Adjustment Transport" />
                        </div>
                        <div class="form-group">
                            <label>1st 1 HOUR</label>
                            <input type="text" name="TotalHour1" data-name="TotalHour1" class="form-control _formInput mandatory" placeholder="1st 1 HOUR" />
                        </div>
                        <div class="form-group">
                            <label>NEXT 7 HOURS</label>
                            <input type="text" name="TotalHour7" data-name="TotalHour7" class="form-control _formInput mandatory" placeholder="NEXT 7 HOURS" />
                        </div>
                        <div class="form-group">
                            <label>NEXT 8 HOURS</label>
                            <input type="text" name="TotalHour8" data-name="TotalHour8" class="form-control _formInput mandatory" placeholder="NEXT 8 HOURS" />
                        </div>
                        <div class="form-group">
                            <label>NEXT 9 HOURS</label>
                            <input type="text" name="TotalHour9" data-name="TotalHour9" class="form-control _formInput mandatory" placeholder="NEXT 9 HOURS" />
                        </div>
                    </div>
                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary" id="btnSave">Save</button>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        $(document).on('click', '#checkAll', function (e) {
            if (this.checked) {
                $(".checkboxes").prop("checked", true);
            } else {
                $(".checkboxes").prop("checked", false);
            }
        });

        $("#btnSearch").click(function () {
            getData(1);
        });

        $("#btnClear").click(function () {
            $("._searchCriteria").val("");
            getData(1, "Clear");
        });

        $("#btnEdit").click(function () {
            var key = "";
            $("#_grid tbody input[type=checkbox]:checked").each(function () {
                key += "|" + $(this).attr("data-key");
            });
            key = (key != "") ? ("|" + key).replace("||", "") : key;
            if (key == "") {
                toastr.error("Data has not been selected");
                return;
            }
            if (key.split("|").length > 1) {
                toastr.error("Only one data can be selected");
                return;
            }
            
            var param = {};
            param["Param"] = key;
            param["Type"] = "GetByKeyOvertime";

            $.ajax({
                type: "POST",
                url: "/Overtime/GetDataByKey",
                data: JSON.stringify(param),
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.btn').prop('disabled', true);
                },
                complete: function () {
                    $('.btn').prop('disabled', false);
                },
                success: function (result) {
                    var row = result[0];

                    $("._formInput").each(function (i, obj) {
                        if ($(obj).attr("class").indexOf("isKey") > 0) {
                            $(obj).prop("disabled", "true");
                        }
                        $(obj).val(row[$(obj).attr("data-name")]);
                    });

                    $("#_modal-form").modal("show");
                },
                error: function (result) {
                    toastr.error(result.responseText);
                }
            });
        });

        $("#btnExport").click(function() {
            var param = {};
            var pValue = "";
            $("._searchCriteria").each(function (i, obj) {
                pValue += this.value + ";";
            });
            param["Param"] = pValue;
            param["ParamHeader"] = "Overtime;" + $("#Periode").val();
            param["Type"] = "Export";
            
            $.ajax({
                type: "POST",
                url: "/Generate/ExportExcel",
                data: JSON.stringify(param),
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    $('.btn').prop('disabled', true);
                },
                complete: function () {
                    $('.btn').prop('disabled', false);
                },
                success: function (result) {
                    var bytes = base64ToBytes(result);
                    var blob = new Blob([bytes], { type: "application/octetstream" });

                    var date = new Date();
                    var dateStr =
                        ("00" + (date.getMonth() + 1)).slice(-2) +
                        ("00" + date.getDate()).slice(-2) +
                        date.getFullYear() +
                        ("00" + date.getHours()).slice(-2) +
                        ("00" + date.getMinutes()).slice(-2) +
                        ("00" + date.getSeconds()).slice(-2);
                    var filename = "Data_" + dateStr + ".xlsx";

                    var isIE = false || !!document.documentMode;
                    if (isIE) {
                        window.navigator.msSaveBlob(blob, filename);
                    } else {
                        var url = window.URL || window.webkitURL;
                        var link = url.createObjectURL(blob);
                        var a = $("<a />");
                        a.attr("download", filename);
                        a.attr("href", link);
                        $("body").append(a);
                        a[0].click();
                        $("body").remove(a);
                    }
                },
                error: function (result) {
                    toastr.error(result.responseText);
                }
            });
        });

        $("#btnGenerate").click(function() {
            if ($("#Periode").val() == "") {
                toastr.error("Periode must be fill");
                return;
            }

            Swal.fire({
                title: "Are you sure?",
                text: "This data will be processed!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, do it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    var param = {};
                    param["Type"] = "Overtime";
                    param["Periode"] = $("#Periode").val().toString();
                    param["Act"] = "Generate";
                    
                    $.ajax({
                        type: "POST",
                        url: "/Generate/GenerateSlip",
                        data: JSON.stringify(param),
                        contentType: "application/json; charset=utf-8",
                        beforeSend: function () {
                            $('.btn').prop('disabled', true);
                        },
                        complete: function () {
                            $('.btn').prop('disabled', false);
                        },
                        success: function (result) {
                            if (result == "Success") {
                                toastr.success("Data has been processed successfully");
                                getData(1);
                            } else {
                                if (result.indexOf("has been generated") > 0) {
                                    Swal.fire({
                                        title: "Are you sure to Re-Generate?",
                                        text: result,
                                        icon: "warning",
                                        showCancelButton: true,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        confirmButtonText: 'Yes, do it!'
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            param = {};
                                            param["Type"] = "Overtime";
                                            param["Periode"] = $("#Periode").val().toString();
                                            param["Act"] = "Re-Generate";

                                            $.ajax({
                                                type: "POST",
                                                url: "/Generate/GenerateSlip",
                                                data: JSON.stringify(param),
                                                contentType: "application/json; charset=utf-8",
                                                beforeSend: function () {
                                                    $('.btn').prop('disabled', true);
                                                },
                                                complete: function () {
                                                    $('.btn').prop('disabled', false);
                                                },
                                                success: function (result) {
                                                    if (result == "Success") {
                                                        toastr.success("Data has been processed successfully");
                                                        getData(1);
                                                    } else {
                                                        toastr.error(result);
                                                    }
                                                },
                                                error: function (result) {
                                                    toastr.error(result.responseText);
                                                }
                                            });
                                        }
                                    });
                                }
                            }
                        },
                        error: function (result) {
                            toastr.error(result.responseText);
                        }
                    });
                }
            });
        });

        $("#btnSave").click(function () {
            var isRules = {};
            var isMessages = {};
            $("._formInput").each(function (i, obj) {
                if ($(obj).attr("class").toLowerCase().indexOf("mandatory") > 0) {
                    isRules[$(obj).attr("data-name")] = { required: true };
                    isMessages[$(obj).attr("data-name")] = { required: "Please enter a " + $(obj).attr("placeholder") };
                }
            });

            $("#_formId").validate({
                rules: isRules,
                messages: isMessages,
                errorElement: 'span',
                errorPlacement: function (error, element) {
                    error.addClass('invalid-feedback');
                    element.closest('.form-group').append(error);
                },
                highlight: function (element, errorClass, validClass) {
                    $(element).addClass('is-invalid');
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).removeClass('is-invalid');
                },
                submitHandler: function (res) {
                    onSaveProcess();
                }
            });
        });
    });

    getData = function (page = 1, act = "") {
        var param = {};
        var pValue = "";
        $("._searchCriteria").each(function (i, obj) {
            pValue += this.value + ";";
        });
        param["Param"] = (act == "Clear") ? "-1" : pValue;
        param["ParamHeader"] = "Overtime;" + $("#Periode").val();
        param["PageNumber"] = page;
        param["RowsOfPage"] = ($(".pageSize").val() == undefined) ? 10 : $(".pageSize").val();

        $.ajax({
            type: "POST",
            url: "/Overtime/GetData",
            data: JSON.stringify(param),
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $('.btn').prop('disabled', true);
            },
            complete: function () {
                $('.btn').prop('disabled', false);
            },
            success: function (result) {
                $("#_content").html(result);

                if (act == "") {
                    var parValue = param.Param.split(";");
                    var seq = 0;
                    $("._searchCriteria").each(function (i, obj) {
                        $(obj).val(parValue[seq]);
                        seq++;
                    });
                }
            },
            error: function (result) {
                toastr.error(result.responseText);
            }
        });
    }

    base64ToBytes = function (base64) {
        var binary_string = window.atob(base64);
        var len = binary_string.length;
        var bytes = new Uint8Array(len);
        for (var i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes.buffer;
    }

    searchFilter = function (e) {
        if (e.keyCode === 13) {
            getData(1);
        }
    }

    const formatCurrency = (number, symbol = 'Rp.') => {
        // Add thousands separator
        const formattedNumber = number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');

        // Format the number as a currency string
        return `${symbol}${formattedNumber}`;
    };

    onSaveProcess = function () {
        Swal.fire({
            title: "Are you sure?",
            text: "This data will be processed!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, do it!'
        }).then((result) => {
            if (result.isConfirmed) {
                var param = {};
                $("._formInput").each(function (i, obj) {
                    param[$(obj).attr("data-name")] = this.value;
                });

                $.ajax({
                    type: "POST",
                    url: "/Overtime/SaveProcess",
                    data: JSON.stringify(param),
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $('.btn').prop('disabled', true);
                    },
                    complete: function () {
                        $('.btn').prop('disabled', false);
                    },
                    success: function (result) {
                        if (result == "Success") {
                            toastr.success("Data has been processed successfully");
                            $("._formInput").val("");
                            $("._formInput").prop("disabled", false);
                            $("#_modal-form").modal("hide");
                            getData(1);
                        } else {
                            toastr.error(result);
                        }
                    },
                    error: function (result) {
                        toastr.error(result.responseText);
                    }
                });
            }
        });
    }
</script>